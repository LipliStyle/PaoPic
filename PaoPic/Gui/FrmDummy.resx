<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBoost.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAABl0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC4xNkRpr/UAAAJoSURBVEhLzVU7
        bxNBEDY0PEIBEsExvr0jQMGjCPwUSiT4LbQBIlASQkokSwbFu5eXokiUNJAKHAkkMMK752CilEikC3G+
        OU9ye96zz0oDnzQ66Wbm25nZmdnC/4FO58TVcPtSOWxOlMOtifGVH0X6x9rjI1D6hlB6Rki9JZTppEX/
        FNLM+cvmFpsPj9Jq+ywIXkD2XOIekfqvp8z8aO3zOXYfjKCmxxDZp0yygaI349INQrGyPYKI6o6z1LuI
        csVTetKrQZRZBuEf187Ui5X6CNO58KR5mXaK03/mr0UX2OQIwZI+D8IpsrF9iINN0ggW9U2qp01eluYB
        q/vCk/p+6hBwEBerEwgVTSfkZGimWJWLbiaWLxqEVQmoc7xQ30NEFUTRohKwqj8wC5Slr6JJ+wCU9Te+
        GyKMHrNlF9T3wSt9Gp5DD9HlJX0HhG37AJb33kLrDJshzcXoGlLdgbzzq+6lDsKYagbosC8W+bdS9etF
        VsNgoTGKsjQODcj4CpxYPRSo0yg4lHiHguXfPLXSfLBO7x4i9a9A6rtslo9HnZPX1xunqMz8pwtE/gSE
        G3wxRwfQxcVtOsRSi2cCu4kahBqFgmZVAiGjWfsAaj1W5UKE6TZFiadZlSB4g0FTxlpumGIMEav7wlfm
        Iaqwn/iZPeJidRpZqwLyNGsm6FI92XzeQ06Zz7GJi+JbWnbGXXZYbLTg4mWHu0FmqyDe7bWDzcfM+tug
        lQvCzV7nPCHy8dc56/oQlAkc5hFlalNmCx4lqWdzI8+CkN9vU00hLYdYGgPiGafvjwuadnrw6eEvVdvJ
        Gvi3KBQOAOC2eXebmSDUAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnFavo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAABl0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC4xNkRpr/UAAAHmSURBVEhLpVY7
        TgMxEN0K7pB4wy9QUKfgOnAJCqKcgwLRorCfiAbKXIIKQewNn0gpoApKE2Ced7La7I43H570JMeeefbO
        jMfxqlC7eTlSoen4oen7oR77gf6xxJjmVDjo1MPXQzZfHao7bJJAnIqZ30raTU0MH3avhgr0GZ3wWxSr
        5kRF+pRlZFA42oLjWlS3ps1yi0hPLjutS2ixbIo05huFRWagJ36cHLC859FkXDL6LynxVhylWFEtY8rL
        JRk/0BfOsvmAxjRn18gmm1+gnqk7qiyu85KBCvXnTm+0a09BqEf6hISHtJZgzNNeo2v2VGC+iv4gtBEe
        ukTlRRK7Yo0Mtd6bD/LPDLAVNUibNrC3Ulq8Zv+lgG3Bl6nH2F2MP5Xax/Ht4xZrONG8f9qmUIwkDWg7
        N7CMzDnrOAEb0Re0G7hDhK+Y+sFzi7VK8IOkRQmeSr4pESJXkplUTe+oFNbMYKuH1iSfHPtUpgOxTPOk
        GOtGmOyztocxndxItnlC20M/r8wDkwRHCJcNiyupC6SLNm/huNayUZHoVyv3rMiKA/zATAoGm7PY7AA8
        FqLxBnQ+PHgsJIf1qC9YToZ9ePCJonMFyWfpkzkH4pcmPteinbStOy7FfBWgn3M7d/5tqf434Xl/9BZP
        PMdXI/gAAAAASUVORK5CYII=
</value>
  </data>
</root>